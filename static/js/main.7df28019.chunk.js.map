{"version":3,"sources":["Day.js","Content.js","Random.js","Archive.js","Url.js","Search.js","Header.js","SearchForm.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Day","day","this","props","Media","class","title","src","href","className","alt","Component","Content","state","data","url","fetch","then","result","json","setState","Random","randoms","map","random","index","Archive","divs","array","element","source","key","to","Url","date","Date","thisYear","getFullYear","year","useParams","month","useRouteMatch","undefined","numOfDays","getDate","parseInt","toString","days","Array","from","_","i","getMonth","months","years","Search","query","searches","search","width","Header","value","handleChange","bind","handleSubmit","event","target","console","log","id","action","onSubmit","type","onChange","placeholder","exact","path","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7df28019.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Day extends Component {\n\t\n\trender(){\n\t\tconst { day } = this.props\n\t\tconst Media = () => {\n\t\t\tif (day['media_type'] === 'video'){\n\t\t\t\treturn(\n\t\t\t\t<div class=\"embed-responsive embed-responsive-16by9\">\n\t\t\t\t\t<iframe title={day['title']} class=\"embed-responsive-item\" src={day['url']}></iframe>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t} else if (day['media_type'] === 'image'){\n\t\t\t\treturn(\n\t\t\t\t\t<a href={day['url']}><img src={day['url']} className=\"apod\" alt=\"APOD\"/></a>\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn(\n\t\t\t\t\t<a href={day[\"apod_site\"]} >Click Here</a>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<h1> Astronomy Picture of the Day </h1>\n\t\t\t\t<p>Discover the cosmos! Each day a different image or photograph of our fascinating universe is featured, along with a brief explanation written by a professional astronomer. </p>\n\t\t\t\t<h2> {day['title']} </h2>\n\t\t\t\t<h5> {day['date']} </h5>\n\t\t\t\t<Media />\n\t\t\t\t<h6> {day['copyright']} </h6>\n\t\t\t\t<br />\n\t\t\t\t<p> {day['description']} </p>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport './Content.css'\nimport Day from './Day'\n\nexport default class Content extends Component  {\n\n\tstate = {\n    \tdata: [],\n\t  }\n\t  \n  // Code is invoked after the component is mounted/inserted into the DOM tree.\n  componentDidMount() {\n\n    const { url } = this.props\n    \n    fetch(url)\n      .then(result => result.json())\n      .then(result => {\n        this.setState({\n          data: result,\n        })\n      })\n  }\n\n  render() {\n\t  return (\n\t\t  <div className=\"container\">\n\t\t\t  <Day day={ this.state.data } />\n\t\t  </div>\n\t)}\n}\n","import React, { Component } from 'react';\nimport './Content.css'\nimport Day from './Day'\n\nexport default class Random extends Component  {\n\n\tstate = {\n    \tdata: [],\n\t  }\n\t  \n  // Code is invoked after the component is mounted/inserted into the DOM tree.\n  componentDidMount() {\n\n    const url = \"https://apodapi.herokuapp.com/api/?count=1\"\n\n    fetch(url)\n      .then(result => result.json())\n      .then(result => {\n        this.setState({\n          data: result,\n        })\n      })\n  }\n\n  render() {\n    const { data } = this.state\n\n    const randoms = data.map((random, index) => {\n    \treturn(\n    \t\t<div className=\"text-center\">\n    \t\t\t<Day day={random} />\n\t\t\t</div>\n    \t\t)\n    })\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t{randoms}\n\t\t</div>\t\t\n\t)}\n}\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nexport default class Archive extends Component {\n    render(props){\n        const { title } = this.props\n        const divs = this.props.array.map((element, index) => {\n            const source = this.props.source + \"/\" + element\n            return(\n                <div className=\"flex\">\n                    <h4 key={element}><Link to={source}>{element}</Link></h4>\n                </div>\n            )\n        })\n        return(\n            <div className=\"container-fluid\">\n                <h2 className=\"mx-auto\">{title}</h2>\n                <div className=\"flexs container\">\n                    {divs}\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { useParams, useRouteMatch } from 'react-router-dom';\nimport Content from './Content';\nimport Archive from './Archive';\n\n\nconst Url = () => {\n        let date = new Date()\n        let thisYear = date.getFullYear()\n        let { year } = useParams()\n        let { month } = useParams()\n        let { day } = useParams()\n        let { url } = useRouteMatch()\n\n        if (day !== undefined){\n            return(\n                <Content url={`https://apodapi.herokuapp.com/api/?date=${year}-${month}-${day}`} />\n            ) \n        } else if (month !== undefined) {\n            const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n            let numOfDays = new Date(year, month, 0).getDate()\n            numOfDays = parseInt(numOfDays.toString())\n            let days = []\n            if(year == 1995 && month == 6){\n                days = Array.from(Array(11), (_, i) => i + 20)\n            } else if(year == thisYear && month == (date.getMonth() + 1)) {\n                days = days = Array.from(Array(date.getDate()), (_, i) => i + 1)\n            } else {\n                days = Array.from(Array(numOfDays), (_, i) => i + 1)\n            }\n            return(\n                <Archive array={days} source = {url} title={`${monthNames[month - 1]} - ${year}`} />\n            )\n        } else if (year !== undefined){\n            let months = []\n            if (year == thisYear){\n                months = Array.from(Array((date.getMonth()) + 1), (_, i) => i + 1) \n\n            }else if (year == 1995 ){\n                months = Array.from(Array(12 - 5), (_, i) => i + 6) \n            } else {\n                months = Array.from(Array(12), (_, i) => i + 1)\n            }\n            return(\n                <Archive array={months} source = {url} title={year} />\n            )\n        } else {\n            const years = Array.from(Array((thisYear + 1) - 1995), (_, i) => i + 1995)\n            return(\n                <Archive array={years} source ={url} title=\"Archive\" />\n            )\n        }\n    }\n\n\nexport default Url","import React, {Component} from 'react';\n\nexport default class Search extends Component {\n    state = {\n        data: []\n    }\n\n    componentDidMount(){\n        const { query } = this.props\n        const { url } = `https://apodapi.herokuapp.com/search/?search_query=${query}&image_thumbnail_size=240&number=10&page=1`;\n\n        fetch(url)\n            .then(result => result.json())\n            .then(result => {\n                this.setState({\n                    data: result,\n                })\n            })\n    }\n\n    render(){\n        const { data } = this.state\n        const searches = data.map((search, index) => {\n            return(\n                <div key={index} className=\"text-center\">\n                    <h2 className=\"\">{search.title}</h2>\n                    <img src={search.url} width=\"30%\"/>\n                </div>\n            )\n        })\n\n        return(\n            <div className=\"container\">\n                {searches}\n            </div>\n        )\n\n    }\n}","import React, { Component } from 'react';\nimport {\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport Content from './Content'\nimport Random from './Random'\nimport Url from './Url'\nimport SearchForm from './SearchForm'\nimport Search from './Search'\n\nexport default class Header extends Component {\n    constructor(props){\n        super(props);\n        this.state = {value: ''};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event){\n        this.setState({value: event.target.value})\n    }\n\n    handleSubmit(event) {\n        console.log(`Search: ${this.state.value}`);\n        return(\n            <Search query={this.state.value} />\n        )\n    }\n    render(){\n        const {value} = this.state\n        console.log(value);\n    \n        return (\n        <header id=\"header-nav\" className=\"navbar\">\n            <div className=\"container\">\n                \n                    <h1 id=\"logo\" className=\"\"><img id=\"logo-img\" className=\"\" src=\"./nasa.png\" alt=\"Logo\"/><Link to=\"/APOD-React/\">APOD NASA</Link></h1>\n                \n                    <form action=\"/APOD-React/search\" onSubmit={this.handleSubmit}>\n                        <input type=\"text\" value={this.state.value} onChange={this.handleChange} placeholder=\"Search...\" className=\"form-control\"/>\n                        <input type=\"submit\" className=\"d-none\" value=\"Search\"/>\n                    </form>\n                    <Link to=\"/APOD-React/archives\" className=\"nav-item nav-link\">Archives</Link>\n                    <Link to=\"/APOD-React/random\" className=\"nav-item nav-link\">Random</Link>\n\n                    <Switch>\n                        <Route exact path=\"/APOD-React\">\n                            <Content url=\"https://apodapi.herokuapp.com/api/\"/>\n                        </Route>\n                        <Route path=\"/APOD-React/archives/:year/:month/:day\">\n                          <Url />\n                        </Route>\n                        <Route path=\"/APOD-React/archives/:year/:month/\">\n                          <Url />\n                        </Route>\n                        <Route path=\"/APOD-React/archives/:year\">\n                            <Url />\n                        </Route>\n                        <Route path=\"/APOD-React/archives\" >\n                            <Url />\n                        </Route>  \n                        <Route path=\"/APOD-React/random\">\n                            <Random/>\n                        </Route>\n                        <Route path=\"/APOD-React/search\">\n                            <Search query={value}/>\n                        </Route>\n                    </Switch>\n                \n            </div>\n\n        </header>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport Search from './Search'\n\nexport default class NameForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {value: ''};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event){\n        this.setState({value: event.target.value})\n    }\n\n    handleSubmit(event) {\n        console.log(`Search: ${this.state.value}`);\n        return(\n            <Search query = {this.state.value} />\n        )\n    }\n\n    render(){\n        return(\n            <form action=\"/APOD-React/search\" onSubmit={this.handleSubmit}>\n                <input type=\"text\" value={this.state.value} onChange={this.handleChange} placeholder=\"Search...\" className=\"form-control\"/>\n                <input type=\"submit\" className=\"d-none\" value=\"Search\"/>\n            </form>\n\n        )\n    }\n}","import React, { Component } from 'react'\n\n\nexport default class Footer extends Component {\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<p>\n\t\t\t\t\t<b>This is a unofficial version of the site made by: Rafael Garcia. For non-commercial use. Only to practice with React</b>\n\t\t\t\t\t<br />\n\t\t\t\t\t<b> Authors &amp; editors: </b>\n\t\t\t\t\t<a href=\"http://www.phy.mtu.edu/faculty/Nemiroff.html\">Robert Nemiroff</a>\n\t\t\t\t\t(<a href=\"http://www.phy.mtu.edu/\">MTU</a>) &amp;\n\t\t\t\t\t<a href=\"https://antwrp.gsfc.nasa.gov/htmltest/jbonnell/www/bonnell.html\">Jerry Bonnell</a> (<a href=\"http://www.astro.umd.edu/\">UMCP</a>)<br />\n\t\t\t\t\t<b>NASA Official: </b> Phillip Newman\n\t\t\t\t\t<a href=\"lib/about_apod.html#srapply\"> (Specific rights apply) </a>.<br />\n\t\t\t\t\t<a href=\"https://www.nasa.gov/about/highlights/HP_Privacy.html\">NASA Web\n\t\t\t\t\tPrivacy Policy and Important Notices</a><br />\n\t\t\t\t\t<b>A service of: </b>\n\t\t\t\t\t<a href=\"https://astrophysics.gsfc.nasa.gov/\">ASD</a> at\n\t\t\t\t\t<a href=\"https://www.nasa.gov/\">NASA</a> /\n\t\t\t\t\t<a href=\"https://www.nasa.gov/centers/goddard/\">GSFC</a>\n\t\t\t\t\t<b> &amp; </b> <a href=\"http://www.mtu.edu/\">Michigan Tech. U.</a><br />\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t)\n\t}\n\t\t\n}\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router,} from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './Header';\nimport Footer from './Footer';\n\nexport default class App extends Component {\n\trender(){\n\t\treturn(\n\t\t\t<Router>\n\t\t\t\t<Header />\n\t\t\t\t<Footer />\n\t\t\t</Router>\n\t\t\t)\n\t}\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}